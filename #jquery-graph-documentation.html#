<script type='text/javascript'>
  // Simple use of .graph() without webservice.

  /*
  SCHEMA FOR data IN $.graph({data})

  var myData =  { 
                  headers: [ column1, column2],
                  data: { 0: {
                              label: '...', // Could be a third column, in which case there would just be one set, but optional labels save memory by grouping data
  set: [ [ column1row1, column2row1 ],
                                     [ column1row2, column2row2 ],
                                     [ column1row3, column2row3 ]
                                   ]
                          1: {
                              label: '...',
                              set: [ [ column1row1, column2row1 ],
                                     [ column1row2, column2row2 ],
                                     [ column1row3, column2row3 ]
                                   ]
                        ],
                  info: {
                          name: '...',
                          description: '...',
                          source: '...' // Ex. 'Data collected by EPA in 2008.'   
                        }
                }         
  */
  var myData =  { 
                  headers: [ 'Amount Sold', 'Year'],
                  data: { 0: {
                              label: 'Widgets',
                              set: [ [ '5', '2001' ],
                                     [ '1', '2002' ],
                                     [ '3', '2003' ]
                                   ]
                          }
                          1: {
                              label: 'Blocks', // Could be a third column, in which case there would just be one set, but optional labels save memory by grouping data
                              set: [ [ '3', '2001' ],
                                     [ '2', '2002' ],
                                     [ '1', '2003' ]
                                   ]
                          }
                        },
                  info: {
                          name: 'Amount Sold in Year',
                          description: 'Notice how the Block Sales steadilly decline while Widget sales recover in 2003.',
                          source: 'Data from R.J.\'s imagination in 2009.' // Ex. 'Data collected by EPA in 2008.'   
                        }
                }
  $('div#graph1').graph({data: myData, library: 'flot'});
  $('div#graph2').graph({data: myData, library: 'jqPlot'});
  var pyql = 'year,megawatts of wind power,region@region and megawatts of wind power is not None and region type in ['Country'] and year > 1990" }';
  $('div#graph3').graph({ library: 'flot' }).epiAPI(pyql);
  $('div#graph4').graph({data: formedData, library: 'flot', dataIsReady: true});
  var pyql = 'year,megawatts of wind power,region@region and megawatts of wind power is not None and region type in ['Country'] and year > 1990" }';
  $('div#graph5').graph({data: myData, library: 'flot', dataIsReady: true}).epiAPI(pyql, {graphingLibrary: 'flot'});

</script>

{syntaxhighlighter "brush: javascipt;"}
  // Basic implementation
  $('div#graph1').graph({data: myData, library: 'flot'});
{/syntaxhighlighter}

<div id='graph1'></div>

{syntaxhighlighter "brush: javascipt;"}
  // This will generate a graph using jqPlot
  $('div#graph2').graph({data: myData, library: 'jqPlot'});
{/syntaxhighlighter}

<div id='graph2'></div>


{syntaxhighlighter "brush: javascipt;"}
  
  /*
   * Generate a graph from a data service
   */
    
  // In this case the EPI API wrapper has built in functionality to form the data correctly.  
  var pyql = 'year,megawatts of wind power,region@region and megawatts of wind power is not None and region type in ['Country'] and year > 1990" }';
  $('div#graph3').graph({ library: 'flot' }).epiAPI(pyql);

{/syntaxhighlighter}

<div id='graph3'></div>


{syntaxhighlighter "brush: javascipt;"}  
  
  /*
   * Generate a graph from a data is already formed for the library of your choosing
   */
  
  
  var formedData = [];
  $('div#graph4').graph({data: formedData, library: 'flot', dataIsReady: true});
{/syntaxhighlighter}

<div id='graph4'></div>


{syntaxhighlighter "brush: javascipt;"}
  
  /*
   * Generate a graph from a data is already formed FROM A SERVICE for the library of your choosing
   */  
  
  // Some services may offer data structures that are already usable with certain graphing libraries
  // Utilizing this option offers performance benefits as it leaves out restructuring of potentially 
  // large data sets. The EPI API offers a Flot format.
  
  var pyql = 'year,megawatts of photovoltaic power,region@region and megawatts of photovoltaic power is not None and region type in ['Country'] and year > 1990" }';
  $('div#graph5').graph({data: myData, library: 'flot', dataIsReady: true}).epiAPI(pyql, {graphingLibrary: 'flot'});

{/syntaxhighlighter}

<div id='graph5'></div>


{syntaxhighlighter "brush: javascipt;"}

  /*
   * Generate a graph using the library of your choosing + graphing options
   */  

  // We can modify the graph by passing in an options object that specifies the settings for library of your choice.
  // The contents and structure of the options object is specific to the library you choose.  In the future we may 
  // be able to standardize graph options across most libraries in the same manner we have standardized the data object.  
  
  var pyql = 'year,megawatts of wind power,region@region and megawatts of wind power is not None and region type in ['Country'] and year > 1990" }';
  
  var options = {type: 'bar_graph'};
  $('div#graph6').graph({data: myData, library: 'flot'}).epiAPI(pyql);

{/syntaxhighlighter}

<div id='graph6'></div>



